# Do not modify this file!    It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.    Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
    imports =
        [ (modulesPath + "/installer/scan/not-detected.nix")
        ];

    boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
    boot.initrd.kernelModules = [ ];
    boot.kernelModules = [ "kvm-amd" ];
    boot.extraModulePackages = [ ];

    fileSystems."/" =
        { device = "/dev/disk/by-uuid/8d94ae1f-b0be-454b-877d-ecf7a454a00a";
            fsType = "ext4";
        };

    fileSystems."/boot" =
        { device = "/dev/disk/by-uuid/8246-7472";
            fsType = "vfat";
            options = [ "fmask=0077" "dmask=0077" ];
        };

    swapDevices = [ ];

    # Activate GPU stuff
    hardware.graphics = {
            enable = true;
    };
    services.xserver.videoDrivers = ["nvidia"];
    hardware.nvidia = {
        modesetting.enable = true;

        # Enable if we are getting crashes after sleeping
        powerManagement.enable = false;
        
        # Use open source drivers 
        open = true;
        
        nvidiaSettings = true;
        # package = config.boot.kernelPackages.nvidiaPackages.stable;
    };

    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    networking.useDHCP = lib.mkDefault true;
    # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
    # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
